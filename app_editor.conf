server {
    listen 80;
    listen [::]:80;
    server_name editor.arxtect.com;
    client_max_body_size 50M;

    if ($host = www.arxtect.com) {
        return 301 https://arxtect.com$request_uri;
    }

    if ($host = editor.arxtect.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    
    if ($host = arxtect.com) {
        return 301 https://arxtect.com$request_uri;
    }
    
    return 404; # managed by Certbot
}

server {
    listen 443 ssl; # managed by Certbot
    server_name editor.arxtect.com;
    client_max_body_size 50M;

    if ($host = www.arxtect.com) {
        return 301 https://arxtect.com$request_uri;
    }

    root /usr/share/nginx/arxtect/project;

    location / {
        try_files $uri $uri/ /index.html;
        index index.html index.htm;
    }

    location /project {
        index index.html;
        try_files $uri $uri/ index.html;
    }

    location ^~/project/static/ {
        alias /usr/share/nginx/arxtect/project/static/;
    }

    location /latex/ {
        proxy_pass http://localhost:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1 {
        proxy_pass http://localhost:8012/api/v1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /websockets/ {
        proxy_pass http://localhost:8013/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /minio/ {
        rewrite ^/minio(/.*)$ $1 break;
        proxy_pass http://arxtect.s3.dualstack.us-east-1.amazonaws.com/;
    }

    location /git/ {
        rewrite ^/git(/.*)$ $1 break;
        proxy_pass http://3.227.9.181:3006;
    }

    location ~ ^/static/media/.*\.wasm$ {
        types {
            application/wasm wasm;
        }
        default_type application/wasm;

        add_header Access-Control-Allow-Headers *;
        add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Allow-Origin *;
    }
    
    ssl_certificate /etc/letsencrypt/live/editor.arxtect.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/editor.arxtect.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
